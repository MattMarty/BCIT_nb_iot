{"ast":null,"code":"var _jsxFileName = \"/Users/codychand/Documents/GitHub/ISSP/BCIT_nb_iot/BCIT_nb_iot_forked/vertical/src/containers/charts/echart/Line.js\";\nimport React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nclass Line extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getOption = () => {\n      return {\n        tooltip: {\n          trigger: 'axis'\n        },\n        toolbox: {\n          show: false,\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          zlevel: 0,\n          x: 50,\n          x2: 50,\n          y: 30,\n          y2: 30,\n          borderWidth: 0,\n          backgroundColor: 'rgba(0,0,0,0)',\n          borderColor: 'rgba(0,0,0,0)'\n        },\n        xAxis: [{\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        }],\n        yAxis: [{\n          type: 'value'\n        }],\n        series: [{\n          data: [820, 932, 901, 934, 1290, 1330, 1320],\n          type: 'line'\n        }],\n        color: ['#e85768']\n      };\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      theme: \"dark\",\n      option: this.getOption(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Line;","map":{"version":3,"sources":["/Users/codychand/Documents/GitHub/ISSP/BCIT_nb_iot/BCIT_nb_iot_forked/vertical/src/containers/charts/echart/Line.js"],"names":["React","Component","ReactEcharts","Line","getOption","tooltip","trigger","toolbox","show","feature","saveAsImage","grid","zlevel","x","x2","y","y2","borderWidth","backgroundColor","borderColor","xAxis","type","data","yAxis","series","color","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SACzBG,SADyB,GACb,MAAM;AACd,aAAO;AACLC,QAAAA,OAAO,EAAG;AACRC,UAAAA,OAAO,EAAE;AADD,SADL;AAILC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAC,KADE;AAEPC,UAAAA,OAAO,EAAE;AACPC,YAAAA,WAAW,EAAE;AADN;AAFF,SAJJ;AAULC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE,CADJ;AAEJC,UAAAA,CAAC,EAAE,EAFC;AAGJC,UAAAA,EAAE,EAAE,EAHA;AAIJC,UAAAA,CAAC,EAAE,EAJC;AAKJC,UAAAA,EAAE,EAAE,EALA;AAMJC,UAAAA,WAAW,EAAE,CANT;AAOJC,UAAAA,eAAe,EAAE,eAPb;AAQJC,UAAAA,WAAW,EAAE;AART,SAVD;AAoBLC,QAAAA,KAAK,EAAG,CACN;AACIC,UAAAA,IAAI,EAAE,UADV;AAEIC,UAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C;AAFV,SADM,CApBH;AA0BLC,QAAAA,KAAK,EAAG,CACN;AACEF,UAAAA,IAAI,EAAG;AADT,SADM,CA1BH;AA+BLG,QAAAA,MAAM,EAAG,CACP;AACIF,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,CADV;AAEID,UAAAA,IAAI,EAAE;AAFV,SADO,CA/BJ;AAqCLI,QAAAA,KAAK,EAAE,CAAC,SAAD;AArCF,OAAP;AAuCD,KAzCsB;AAAA;;AA0CzBC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AACA,MAAA,KAAK,EAAC,MADN;AAEA,MAAA,MAAM,EAAE,KAAKtB,SAAL,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAQH;;AAnDwB;;AAqD7B,eAAeD,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nclass Line extends Component {\n    getOption = () => {\n        return {\n          tooltip : {\n            trigger: 'axis'\n          },\n          toolbox: {\n            show:false,\n            feature: {\n              saveAsImage: {}\n            }\n          },\n          grid: {\n            zlevel: 0,\n            x: 50,\n            x2: 50,\n            y: 30,\n            y2: 30,\n            borderWidth: 0,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderColor: 'rgba(0,0,0,0)'\n          },\n          xAxis : [\n            {\n                type: 'category',\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n            }\n          ],\n          yAxis : [\n            {\n              type : 'value'\n            }\n          ],\n          series : [\n            {\n                data: [820, 932, 901, 934, 1290, 1330, 1320],\n                type: 'line'\n            },\n          ],\n          color: ['#e85768'],\n        };\n      };\n    render() {\n        return (\n            <React.Fragment>\n            <ReactEcharts \n            theme='dark'\n            option={this.getOption()}\n            />\n            </React.Fragment>\n        );\n    }\n}\nexport default Line;\n\n"]},"metadata":{},"sourceType":"module"}