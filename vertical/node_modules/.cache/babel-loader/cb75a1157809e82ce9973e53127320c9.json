{"ast":null,"code":"var _jsxFileName = \"/Users/codychand/Documents/GitHub/ISSP/BCIT_nb_iot/BCIT_nb_iot_forked/vertical/src/containers/charts/echart/Pie.js\";\nimport React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nclass Pie extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getOption = () => {\n      return {\n        toolbox: {\n          show: false\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: ['Laptop', 'Tablet', 'Mobile', 'Others', 'Desktop']\n        },\n        color: ['#e74c5e', '#47bd9a', '#06c2de', '#f9d570', '#4090cb'],\n        series: [{\n          name: 'Total sales',\n          type: 'pie',\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: [{\n            value: 335,\n            name: 'Laptop'\n          }, {\n            value: 310,\n            name: 'Tablet'\n          }, {\n            value: 234,\n            name: 'Mobile'\n          }, {\n            value: 135,\n            name: 'Others'\n          }, {\n            value: 1548,\n            name: 'Desktop'\n          }],\n          itemStyle: {\n            emphasis: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      theme: \"dark\",\n      option: this.getOption(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Pie;","map":{"version":3,"sources":["/Users/codychand/Documents/GitHub/ISSP/BCIT_nb_iot/BCIT_nb_iot_forked/vertical/src/containers/charts/echart/Pie.js"],"names":["React","Component","ReactEcharts","Pie","getOption","toolbox","show","tooltip","trigger","formatter","legend","orient","left","data","color","series","name","type","radius","center","value","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SACxBG,SADwB,GACZ,MAAM;AACd,aAAO;AACLC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAC;AADE,SADJ;AAILC,QAAAA,OAAO,EAAG;AACRC,UAAAA,OAAO,EAAE,MADD;AAERC,UAAAA,SAAS,EAAE;AAFH,SAJL;AAQPC,QAAAA,MAAM,EAAE;AACJC,UAAAA,MAAM,EAAE,UADJ;AAEJC,UAAAA,IAAI,EAAE,MAFF;AAGJC,UAAAA,IAAI,EAAE,CAAC,QAAD,EAAU,QAAV,EAAmB,QAAnB,EAA4B,QAA5B,EAAqC,SAArC;AAHF,SARD;AAaPC,QAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAbA;AAcPC,QAAAA,MAAM,EAAG,CACL;AACIC,UAAAA,IAAI,EAAE,aADV;AAEIC,UAAAA,IAAI,EAAE,KAFV;AAGIC,UAAAA,MAAM,EAAG,KAHb;AAIIC,UAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CAJZ;AAKIN,UAAAA,IAAI,EAAC,CACD;AAACO,YAAAA,KAAK,EAAC,GAAP;AAAYJ,YAAAA,IAAI,EAAC;AAAjB,WADC,EAED;AAACI,YAAAA,KAAK,EAAC,GAAP;AAAYJ,YAAAA,IAAI,EAAC;AAAjB,WAFC,EAGD;AAACI,YAAAA,KAAK,EAAC,GAAP;AAAYJ,YAAAA,IAAI,EAAC;AAAjB,WAHC,EAID;AAACI,YAAAA,KAAK,EAAC,GAAP;AAAYJ,YAAAA,IAAI,EAAC;AAAjB,WAJC,EAKD;AAACI,YAAAA,KAAK,EAAC,IAAP;AAAaJ,YAAAA,IAAI,EAAC;AAAlB,WALC,CALT;AAYIK,UAAAA,SAAS,EAAE;AACPC,YAAAA,QAAQ,EAAE;AACNC,cAAAA,UAAU,EAAE,EADN;AAENC,cAAAA,aAAa,EAAE,CAFT;AAGNC,cAAAA,WAAW,EAAE;AAHP;AADH;AAZf,SADK;AAdF,OAAP;AAqCD,KAvCqB;AAAA;;AAwCxBC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,YAAD;AACC,MAAA,KAAK,EAAC,MADP;AAEA,MAAA,MAAM,EAAE,KAAKtB,SAAL,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAQH;;AAjDuB;;AAmD5B,eAAeD,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\n\nclass Pie extends Component {\n    getOption = () => {\n        return {\n          toolbox: {\n            show:false,\n          },\n          tooltip : {\n            trigger: 'item',\n            formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n        },\n        legend: {\n            orient: 'vertical',\n            left: 'left',\n            data: ['Laptop','Tablet','Mobile','Others','Desktop']\n        },\n        color: ['#e74c5e', '#47bd9a', '#06c2de', '#f9d570', '#4090cb'],\n        series : [\n            {\n                name: 'Total sales',\n                type: 'pie',\n                radius : '55%',\n                center: ['50%', '60%'],\n                data:[\n                    {value:335, name:'Laptop'},\n                    {value:310, name:'Tablet'},\n                    {value:234, name:'Mobile'},\n                    {value:135, name:'Others'},\n                    {value:1548, name:'Desktop'}\n                ],\n                itemStyle: {\n                    emphasis: {\n                        shadowBlur: 10,\n                        shadowOffsetX: 0,\n                        shadowColor: 'rgba(0, 0, 0, 0.5)'\n                    }\n                }\n            }\n        ]\n        };\n      };\n    render() {\n        return (\n            <React.Fragment>\n            <ReactEcharts\n             theme='dark'\n            option={this.getOption()}\n            />\n            </React.Fragment>\n        );\n    }\n}\nexport default Pie;\n\n"]},"metadata":{},"sourceType":"module"}