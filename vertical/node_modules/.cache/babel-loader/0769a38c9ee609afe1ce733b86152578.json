{"ast":null,"code":"var _jsxFileName = \"/Users/codychand/Documents/GitHub/ISSP/BCIT_nb_iot/BCIT_nb_iot_forked/vertical/src/containers/MainContent/form/form-uploads.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport Dropzone from 'react-dropzone';\nimport { Link } from 'react-router-dom';\nimport { activateAuthLayout } from '../../../store/actions';\nimport { connect } from 'react-redux';\nimport Settingmenu from '../Subpages/Settingmenu';\n\nclass FormUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAcceptedFiles = files => {\n      files.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file),\n        formattedSize: this.formatBytes(file.size)\n      }));\n      this.setState({\n        selectedFiles: files\n      });\n    };\n\n    this.formatBytes = (bytes, decimals = 2) => {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const dm = decimals < 0 ? 0 : decimals;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.state = {\n      selectedFiles: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.activateAuthLayout();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page-title-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"page-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Form File Upload\"), React.createElement(\"ol\", {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"mdi mdi-home-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Forms\")), React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Form File Upload\"))), React.createElement(Col, {\n      sm: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-right d-none d-md-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Settingmenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mt-0 header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Dropzone\"), React.createElement(\"p\", {\n      className: \"text-muted mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"DropzoneJS is an open source library that provides drag\\u2019n\\u2019drop file uploads with image previews.\"), React.createElement(Dropzone, {\n      onDrop: acceptedFiles => this.handleAcceptedFiles(acceptedFiles),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => React.createElement(\"div\", {\n      className: \"dropzone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({\n      className: \"dz-message needsclick\"\n    }, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      className: \"h1 text-muted dripicons-cloud-upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Drop files here or click to upload.\"), React.createElement(\"span\", {\n      className: \"text-muted font-13\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"(This is just a demo dropzone. Selected files are \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"not\"), \" actually uploaded.)\")))), React.createElement(\"div\", {\n      className: \"dropzone-previews mt-3\",\n      id: \"file-previews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.selectedFiles.map((f, i) => {\n      return React.createElement(Card, {\n        className: \"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\",\n        key: i + \"-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"col-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        \"data-dz-thumbnail\": \"\",\n        height: \"80\",\n        className: \"avatar-sm rounded bg-light\",\n        alt: f.name,\n        src: f.preview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(Col, {\n        className: \"pl-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"#\",\n        className: \"text-muted font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, f.name), React.createElement(\"p\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, f.formattedSize))))));\n    })), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary waves-effect waves-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Send Files\")))))))));\n  }\n\n}\n\nexport default connect(null, {\n  activateAuthLayout\n})(FormUpload);","map":{"version":3,"sources":["/Users/codychand/Documents/GitHub/ISSP/BCIT_nb_iot/BCIT_nb_iot_forked/vertical/src/containers/MainContent/form/form-uploads.js"],"names":["React","Component","Row","Col","Card","CardBody","Dropzone","Link","activateAuthLayout","connect","Settingmenu","FormUpload","constructor","props","handleAcceptedFiles","files","map","file","Object","assign","preview","URL","createObjectURL","formattedSize","formatBytes","size","setState","selectedFiles","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","bind","state","componentDidMount","render","acceptedFiles","getRootProps","getInputProps","f","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Card, CardBody } from 'reactstrap';\nimport Dropzone from 'react-dropzone';\nimport { Link } from 'react-router-dom';\nimport { activateAuthLayout } from '../../../store/actions';\nimport { connect } from 'react-redux';\nimport Settingmenu from '../Subpages/Settingmenu';\n\nclass FormUpload extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n\n        this.state = { selectedFiles: [] }\n    }\n\n    componentDidMount() {\n        this.props.activateAuthLayout();\n    }\n\n\n    handleAcceptedFiles = (files) => {\n        files.map(file => Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            formattedSize: this.formatBytes(file.size)\n        }));\n\n        this.setState({ selectedFiles: files });\n    }\n\n    /**\n    * Formats the size\n    */\n    formatBytes = (bytes, decimals = 2) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div className=\"content\">\n                    <div className=\"container-fluid\">\n                        <div className=\"page-title-box\">\n                            <Row className=\"align-items-center\">\n                                <Col sm=\"6\">\n                                    <h4 className=\"page-title\">Form File Upload</h4>\n                                    <ol className=\"breadcrumb\">\n                                        <li className=\"breadcrumb-item\"><Link to=\"#\"><i className=\"mdi mdi-home-outline\"></i></Link></li>\n                                        <li className=\"breadcrumb-item\"><Link to=\"#\">Forms</Link></li>\n                                        <li className=\"breadcrumb-item active\">Form File Upload</li>\n                                    </ol>\n                                </Col>\n                                <Col sm=\"6\">\n                                    <div className=\"float-right d-none d-md-block\">\n                                        <Settingmenu />\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n\n                        <Row>\n                            <Col >\n                                <Card>\n                                    <CardBody>\n\n                                        <h4 className=\"mt-0 header-title\">Dropzone</h4>\n                                        <p className=\"text-muted mb-4\">DropzoneJS is an open source library\n                                            that provides drag’n’drop file uploads with image previews.\n                                        </p>\n\n                                        <Dropzone onDrop={acceptedFiles => this.handleAcceptedFiles(acceptedFiles)}>\n                                            {({ getRootProps, getInputProps }) => (\n                                                <div className=\"dropzone\">\n                                                    <div className=\"dz-message needsclick\" {...getRootProps()}>\n                                                        <input {...getInputProps()} />\n                                                        <i className=\"h1 text-muted dripicons-cloud-upload\"></i>\n                                                        <h3>Drop files here or click to upload.</h3>\n                                                        <span className=\"text-muted font-13\">(This is just a demo dropzone. Selected files are <strong>not</strong> actually uploaded.)</span>\n                                                    </div>\n                                                </div>\n                                            )}\n                                        </Dropzone>\n\n                                        <div className=\"dropzone-previews mt-3\" id=\"file-previews\">\n                                            {this.state.selectedFiles.map((f, i) => {\n                                                return <Card className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\" key={i + \"-file\"}>\n                                                    <div className=\"p-2\">\n                                                        <Row className=\"align-items-center\">\n                                                            <Col className=\"col-auto\">\n                                                                <img data-dz-thumbnail=\"\" height=\"80\" className=\"avatar-sm rounded bg-light\" alt={f.name} src={f.preview} />\n                                                            </Col>\n                                                            <Col className=\"pl-0\">\n                                                                <Link to=\"#\" className=\"text-muted font-weight-bold\">{f.name}</Link>\n                                                                <p className=\"mb-0\"><strong>{f.formattedSize}</strong></p>\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                </Card>\n                                            })}\n                                        </div>\n                                        <div className=\"text-center mt-4\">\n                                            <button type=\"button\" className=\"btn btn-primary waves-effect waves-light\">Send Files</button>\n                                        </div>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect(null, { activateAuthLayout })(FormUpload);\n\n"]},"metadata":{},"sourceType":"module"}